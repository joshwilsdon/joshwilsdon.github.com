---
layout: post
title: Cloud Computing
summary: What do I do?
tags: [work, computers, cloud]
---

<div class="floatyimg"><a href="http://search.techworld.com/tag/cloud-computing"><img src="/images/cloud.jpg" title="Cloud" alt="Cloud" /></a></div>
Non-technical people often ask me what it is that I'm working on now and I have trouble explaining it.  This is an attempt to give some insights into what I do, for people who don't know much about [Cloud Computing](http://en.wikipedia.org/wiki/Cloud_computing) or much about the workings of computer software in general.

Working with computers can be a lot of fun.  As a software engineer, I can build my own entire universe inside a computer and make it do whatever I want.  Most of the software tools I use are freely available and I can always build my own tools that fit the job if what I'm trying to do isn't easy with the existing tools.  When things go wrong it's always possible to fix so long as you have enough patience and are willing to track the problem down to the ultimate cause.  Most of the time however is spent managing complexity.  And sometimes getting everything exactly right is really, really hard.  Like a conductor conducting an orchestra everything has to perform its part perfectly if you want the proper result.

When you're working on building a software for a single computer, things are complicated enough but as soon as you start working on a software system that involves multiple computers, your problems compound.  It often becomes necessary as programs and systems grow but when you move from 1 to 2 computers you now have 2 places things can go wrong.  Plus, you are adding a network which introduces latency and twice as much hardware which doubles your chance of some sort of hardware failure.  That's even before you get to the fact that your own code needs to be much more complex to manage 2 computers coordinating with each other.

There's a limit however on how much you can actually do with 2 computers.  No matter how fast your 2 computers are, if what you're trying to do gets too many connections or otherwise too big, you need to add more computers.  Getting your own software working in a multi-computer environment is hard enough, but when you also need to deal with managing the physical hardware, the operating system, the network and all the other pieces it makes it even tougher.  This is really where the concept of Cloud Computing comes in.

Cloud Computing, at least how I think of it, allows someone who wants to build or use a software system to focus on just writing and/or maintaining that software system with the actual networking, hardware, operating system and sometimes even support software managed by someone else.  Each company offering "Cloud Services" defines their own platform which is a set of building blocks for you to use in order to run your own software.  They differ mostly in what levels of the software stack they manage for you and how they let you manage your resources with their platform.

To give an example, if I were a making a new Internet game and I wanted to be able to put it out so people could start playing with it, I need to have at least one computer running my software connected to the Internet so that other people can access my game.  Without Cloud Computing that would mean someone (usually me) would need to buy or rent a computer and install an operating system on it.  Then the computer needs to be connected to the Internet which on the scale of one computer can be relatively costly.  Once I've setup this computer and installed the operating system and support software for my game, configured the networking and the rest of the operating environment and installed and tested my game, I'd be ready to start having customers playing my game.

Notice how many things I need to do before I can get ready to have customers using my game?  Also notice how many of these steps are not related to what I'm trying to do (just make a game)?  There are more problems here too.  I had to spend a lot of money up-front to get this game up before people could use it.  I had to pay to rent or buy a computer, I had to pay an Internet provider to connect my computer to the Internet and possibly even pay an administrator to setup my computer the way I want it if I'm a developer who knows how to write software but doesn't also know how to setup servers.  So I needed to make a fairly substantial initial investment in this game before I even know how popular it would be.

It's even worse if I expect it to become popular because then I need to guess how popular and probably pay to have several computers setup at the same time before I even launch my game because I don't want it to crash or otherwise not be able to handle the load of all the people trying to play my game.  I have to buy these up-front because buying computers is a process that can take quite a while and I also still need to set them up when I finally do get them.

Worse still is if I spent a lot of money and time setting up all these servers and getting everything ready and hardly anyone comes to play my game.  At that point I've just wasted a lot of money and now I'm also possibly stuck owning a bunch of hardware that I don't need and I need to sell at a big discount.

If I were to develop this same game but utilizing a Cloud Computing service, things would look quite a bit different.  First of all I'd not need to spend time setting up my network or hardware.  The cloud provider would take care of that for me.  I'd also not need to (in most cases) install my own operating system.  Instead what they would provide me with is access to a "virtual computer" (which as far as my game is concerned is a real computer) on which to install my software.  Many providers also allow you to get these virtual computers preconfigured with different flavors of support software you might need for your application.  It's also possible with many providers to pay only for the amount of resources you actually use.

Paying only for what I use, combined with the fact that what I'm paying for can be setup usually in minutes often just seconds, means that I can start with just one virtual computer running my game.  If I notice that it is getting popular, I can setup additional virtual computers within minutes and without needing to actually purchase the hardware or setup the operating system or anything else.  I just need to create a new virtual machine and run my software on it.  This takes away a lot of the non-development work and allows me to focus on making my game better.  It also means that if my game is not a success, all that I've paid for is the one virtual computer which I can now shut down.  If it is successful, I can scale from 1 computer to 10 or even 100 all from my laptop.

Anyway, having said all that, what I'm working on now and what [Joyent](http://joyent.com) offers is the sort of cloud computing infrastructure that allows people to create these virtual computers.  I'm basically building and improving the systems that allow all of these virtual computers to run and the tools for managing them.  We're also working on adding features which make it so that you can do even more things with these virtual computers than you could do with a physical computer, since we can write software that has a lot more visibility into the characteristics of your virtual computers than could be done with physical computers and our software knows about the network and other bits as well.

This post turned out to be a lot longer than I planned, but I hope it explains a little more what cloud computing is and what it is that I'm working on every day.
